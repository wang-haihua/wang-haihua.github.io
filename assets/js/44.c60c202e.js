(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{371:function(t,e,v){"use strict";v.r(e);var _=v(7),n=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"leetcode刷题笔记-双指针"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leetcode刷题笔记-双指针"}},[t._v("#")]),t._v(" LeetCode刷题笔记 双指针")]),t._v(" "),e("h4",{attrs:{id:"什么是双指针"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是双指针"}},[t._v("#")]),t._v(" 什么是双指针")]),t._v(" "),e("p",[t._v("​\t**双指针的用途：**双指针主要用于单循环遍历线性表数据结构，两个指针指向不同的元素，从而协同完成任务（通常双指针分别指向元素比较，或者两元素联合与某一条件比较）")]),t._v(" "),e("p",[t._v("​\t**双指针的特点：**不管数据输入是字符串、数组还是链表，使用一般方法的遍历方法时间复杂度度在"),e("em",[t._v("O(n^3)"),e("em",[t._v("和")]),t._v("O(n^2)"),e("em",[t._v("使用双指针对其进行遍历的平均时间复杂度为")]),t._v("O(nlogn)")]),t._v("，最好的情况下时间复杂度为"),e("em",[t._v("O(n)")])]),t._v(" "),e("p",[t._v("​\t"),e("strong",[t._v("两种特殊形式的双指针")])]),t._v(" "),e("blockquote",[e("ul",[e("li",[t._v("碰撞指针"),e("em",[t._v("Opposite directional")]),t._v("：两个指针指向同一线性表，但是遍历方向相反，一个指针指向开头，另一个指向末尾，它们相向移动直到相遇或满足其他特殊条件为止")]),t._v(" "),e("li",[t._v("快慢指针"),e("em",[t._v("Equi-directional")]),t._v("：两个指针指向同一线性表，遍历方向相同，且两个指针起点可以相同，也可以不同形成一个滑动窗口，两个指针以不同的策略移动，直到两个指针的值相等或满足其他特殊条件为止")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);