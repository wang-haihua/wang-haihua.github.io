(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{352:function(s,t,a){"use strict";a.r(t);var n=a(7),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"c-string类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-string类"}},[s._v("#")]),s._v(" C++ string类")]),s._v(" "),t("h2",{attrs:{id:"string-的初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string-的初始化"}},[s._v("#")]),s._v(" string 的初始化")]),s._v(" "),t("p",[s._v("​\t使用 string 类要导入头文件 "),t("code",[s._v("#include <string>")]),s._v("，string 类是模板类 "),t("code",[s._v("typedef basic_string<char> string;")]),s._v("  从 "),t("code",[s._v("basic_string")]),s._v(" 类模板实例化生成的。string 类有多种构造函数，string 对象的几种初始化方式如下")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("string "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("s1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nstring month "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"March"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nstring "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("s2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'x'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 生成具有8个x字符的字符串")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// string 对象不能用字符(char)进行初始化，但是可以用字符对string 对象进行赋值")]),s._v("\nstring error1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'c'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nstring "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'c'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// string 对象不能用数值进行初始化")]),s._v("\nstring error1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nstring "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("h2",{attrs:{id:"string-的基础操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string-的基础操作"}},[s._v("#")]),s._v(" string 的基础操作")]),s._v(" "),t("p",[t("strong",[s._v("获取长度")]),s._v(" "),t("code",[s._v("length()")]),s._v("：")]),s._v(" "),t("p",[s._v("​\tstring 对象的长度用成员函数 "),t("code",[s._v("length()")]),s._v(" 读取，"),t("code",[s._v('string s("hello"); cout << s.length();')])]),s._v(" "),t("p",[t("strong",[s._v("流读取")]),s._v(" "),t("code",[s._v("getline()")]),s._v("：")]),s._v(" "),t("p",[s._v("​\tstring 类支持流读取运算符，"),t("code",[s._v("string str; cin >> str;")]),s._v("。同时支持 "),t("code",[s._v("getline()")]),s._v(" 函数，从流读取中读取一整行到指定的 string 对象，"),t("code",[s._v("getline(cin, str);")])]),s._v(" "),t("p",[t("strong",[s._v("赋值")]),s._v(" "),t("code",[s._v("=")]),s._v("：")]),s._v(" "),t("p",[s._v("​\tstring 类支持 "),t("code",[s._v("=")]),s._v(" 运算符进行赋值，"),t("code",[s._v('string s1("cat"), s2;')])]),s._v(" "),t("p",[t("strong",[s._v("复制")]),s._v(" "),t("code",[s._v("assign()")]),s._v("：")]),s._v(" "),t("p",[s._v("​\tstring 对象使用 "),t("code",[s._v("assign()")]),s._v(" 成员函数进行复制，"),t("code",[s._v('string s1("cat"), s3; s3.assign(s1);')]),s._v("，使用 "),t("code",[s._v("assign()")]),s._v(" 函数除了可以完整复制，也可以指定起始位置和子串长度进行"),t("strong",[s._v("部分复制")]),s._v("，"),t("code",[s._v("s3.assign(s1,1,3);")]),s._v(" 从 s1 中下标为1的字符开始复制3个字符的子串给 s3。除此之外也可以对单个字符进行复制 "),t("code",[s._v("s2[5] = s1[3] = 'a';")])]),s._v(" "),t("p",[t("strong",[s._v("随机访问")]),s._v(" "),t("code",[s._v("at()")]),s._v("：")]),s._v(" "),t("p",[s._v("​\tstring 对象可以使用 "),t("code",[s._v("at()")]),s._v(" 成员函数逐个访问对象中的字符，也可以使用"),t("strong",[s._v("下标运算符")]),s._v(" "),t("code",[s._v("[]")]),s._v(" 进行随机访问，区别在于 "),t("code",[s._v("at()")]),s._v(" 成员函数会做范围检查，如果超出范围会抛出 "),t("code",[s._v("out_of_range")]),s._v(" 异常，而下标运算符不做范围检查。"),t("code",[s._v('string str("Hello"); sout<< str.at(1) << str[2];')])]),s._v(" "),t("p",[t("strong",[s._v("连接")]),s._v(" "),t("code",[s._v("append()")]),s._v("：")]),s._v(" "),t("p",[s._v("​\tstring 对象的连接可以使用 "),t("code",[s._v("append()")]),s._v(" 成员函数连接字符串，"),t("code",[s._v('string s1("hello"), s2("world"); s1.append(s2);')]),s._v("；和 "),t("code",[s._v("assign()")]),s._v(" 函数类似 "),t("code",[s._v("append()")]),s._v(" 函数也可以通过指定起始位置和长度进行"),t("strong",[s._v("部分连接")]),s._v("，"),t("code",[s._v("s2.append(s1,3,s1.size());")]),s._v(" 从 s1 中下标为3开始将s1.size() 个字符连接到 s2 字符串，如果字符串内没有足够字符，则复制到字符串最后一个字符。除了 "),t("code",[s._v("append()")]),s._v(" 函数也可以使用"),t("strong",[s._v("连接运算符")]),s._v(" "),t("code",[s._v("+")]),s._v(" 连接字符串，"),t("code",[s._v("s1 += s2;")]),s._v("。")]),s._v(" "),t("p",[t("strong",[s._v("取子串")]),s._v(" "),t("code",[s._v("substr()")]),s._v("：")]),s._v(" "),t("p",[s._v("​\tstring 对象使用 "),t("code",[s._v("substr()")]),s._v(" 成员函数取子串，"),t("code",[s._v('string s1("hello"), s2; s2 = s1.substr(0,4);')]),s._v(" 返回 s1 从下标0开始的4个字符组成的子串给 s2。")]),s._v(" "),t("p",[t("strong",[s._v("交换")]),s._v(" "),t("code",[s._v("swap()")]),s._v("：")]),s._v(" "),t("p",[s._v("​\tstring 对象使用 "),t("code",[s._v("swap()")]),s._v(" 成员函数交换两个 string 对象的值，"),t("code",[s._v('string s1("hello"), s2("world"); s1.swap(s2);')])]),s._v(" "),t("p",[t("strong",[s._v("替换")]),s._v(" "),t("code",[s._v("replace()")]),s._v("：")]),s._v(" "),t("p",[s._v("​\tstring 对象使用 "),t("code",[s._v("replace()")]),s._v(" 成员函数替换字符串，"),t("code",[s._v('string s1("hello"); s1.replace(2,3,"1234");')]),s._v(' 将 s1 中从下标 2 开始的3个字符串用 "1234" 替换；也可以使用·\t'),t("code",[s._v('s1.replace(2,3,"1234",1,2);')]),s._v(' 指定用于替换字符串的子串，即用 "1234" 下标 1 开始的两个字符进行替换。')]),s._v(" "),t("p",[t("strong",[s._v("插入")]),s._v(" "),t("code",[s._v("insert()")]),s._v("：")]),s._v(" "),t("p",[s._v("​\tstring 对象使用 "),t("code",[s._v("insert()")]),s._v(" 成员函数插入其他字符串，"),t("code",[s._v('string s1("hello"), s2("world"); s1.insert(4,s2);')]),s._v(" 将 s2 插入到 s1 下标为4的位置；"),t("code",[s._v("s1.insert(2,s2,0,3);")]),s._v(" 将 s2 从下标0开始的3个字符插入到 s1 下标为2的位置；")]),s._v(" "),t("p",[t("strong",[s._v("删除子串")]),s._v(" "),t("code",[s._v("erase()")]),s._v("：")]),s._v(" "),t("p",[s._v("​\tstring 对象使用 "),t("code",[s._v("erase()")]),s._v(" 成员函数删除子串，"),t("code",[s._v('string s1("hello"); s1.erase(2);')]),s._v(" 将 s1 中从下标 2 开始（包含下标2的字符）之后的字符删除。")]),s._v(" "),t("h2",{attrs:{id:"string-的比较操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string-的比较操作"}},[s._v("#")]),s._v(" string 的比较操作")]),s._v(" "),t("p",[t("strong",[s._v("关系运算符比大小")]),s._v("：string 对象可以关系运算符比较大小 "),t("code",[s._v("==, >, >=, <, <=, !=")]),s._v(" 返回值都是 bool 类型，成立返回 true，否则返回 false")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("string "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("s1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("s2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("s3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hell"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ncout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nb "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" s3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ncout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nb "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" s3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ncout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[t("code",[s._v("compare()")]),t("strong",[s._v("函数比大小")]),s._v("：string 对象也可以"),t("code",[s._v("compare()")]),s._v(" 成员函数比较大小 ，大于返回值为 1，等于返回值为 0，小于返回值为 -1；和 "),t("code",[s._v("assign(), append()")]),s._v("函数类似，"),t("code",[s._v("compare()")]),s._v("函数也可以指定起始位置和长度进行"),t("strong",[s._v("部分比较")]),s._v("，"),t("code",[s._v("s1.compare(1,2,s3,0,3);")]),s._v(" s1 从以开始的2个字符构成的子串和 s3 从0开始的3个字符构成的子串进行比较。")]),s._v(" "),t("h2",{attrs:{id:"string-的查找操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string-的查找操作"}},[s._v("#")]),s._v(" string 的查找操作")]),s._v(" "),t("p",[s._v("​\t示例 "),t("code",[s._v('string s1("hello, world");')])]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("find()")]),s._v("："),t("code",[s._v('s1.find("lo");')]),s._v(" 在 s1 中从前向后查找 "),t("code",[s._v('"lo"')]),s._v(" 第一次出现的地方，如果找到返回对应的位置即 "),t("code",[s._v("l")]),s._v(" 的位置下标；如果没有找到则返回一个静态常量 "),t("code",[s._v("string::npos")]),s._v(" 。除此之外，"),t("code",[s._v("find()")]),s._v(" 成员函数也可以指定查找的起始位置，"),t("code",[s._v('s1.find("ll",3);')]),s._v("表示从 s1 下标为3的位置开始从前向后查找。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("rfind()")]),s._v("："),t("code",[s._v('s1.rfind("lo");')]),s._v(" 在 s1 中从后向前查找 "),t("code",[s._v('"lo"')]),s._v(" 第一次出现的地方，如果找到返回对应的位置即 "),t("code",[s._v("l")]),s._v(" 的位置下标；如果没有找到则返回一个静态常量 "),t("code",[s._v("string::npos")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("find_first_of()")]),s._v("："),t("code",[s._v('s1.find_first_of("abcd");')]),s._v(" 在 s1 中从前向后查找 "),t("code",[s._v('"abdc"')]),s._v(" 中"),t("strong",[s._v("任何一个")]),s._v("字符第一次出现的地方，如果找到返回被找到字母的位置；如果没有找到则返回一个静态常量 "),t("code",[s._v("string::npos")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("find_last_not_of()")]),s._v("："),t("code",[s._v('s1.find_last_not_of("abcd");')]),s._v(" 在 s1 中从后向前查找"),t("strong",[s._v("不在")]),s._v(" "),t("code",[s._v('"abdc"')]),s._v(" 中"),t("strong",[s._v("任何一个")]),s._v("字符第一次出现的地方，如果找到返回被找到字母的位置；如果没有找到则返回一个静态常量 "),t("code",[s._v("string::npos")])])])]),s._v(" "),t("h2",{attrs:{id:"string-的c语言转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string-的c语言转换"}},[s._v("#")]),s._v(" string 的C语言转换")]),s._v(" "),t("p",[s._v("​\tC++ 是兼容 C 语言的，但是 C 语言中没有 string 类，所以要使用一些方法将 string 对象转换为 C 语言支持的 "),t("code",[s._v("char *")]),s._v(" 字符串。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("c_str()")]),s._v("：返回一个以 "),t("code",[s._v("\\0")]),s._v(" 结尾的 C 字符串，即 "),t("code",[s._v("c_str()")]),s._v(" 函数返回一个指向正规 C 字符串的指针, 内容与原始string串相同。例如 "),t("code",[s._v('string s1("hello world"); s1.c_str();')]),s._v(" ，"),t("code",[s._v("s1.c_str();")]),s._v(" 返回传统的 "),t("code",[s._v("const char *")]),s._v(" 类型字符串，且该字符串以 "),t("code",[s._v("\\0")]),s._v(" 结尾。")]),s._v(" "),t("li",[t("code",[s._v("data()")]),s._v("：与 "),t("code",[s._v("c_str()")]),s._v(" 方法类似，但是返回的是 "),t("code",[s._v("char *")]),s._v(" 类型字符串，而非 "),t("code",[s._v("const")]),s._v(" 类型，在修改时会导致原始字符转被更改。")])]),s._v(" "),t("h2",{attrs:{id:"字符串流处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串流处理"}},[s._v("#")]),s._v(" 字符串流处理")]),s._v(" "),t("p",[s._v("​\t除了标准流和文件流输入输出外，还可以从 string 进行输入输出。类似 istream 和 ostream 进行标准流输入输出，也可以用 istringstream 和 ostringstream 进行字符串上的输入输出，也称为内存输入输出。使用字符串流处理需要导入以下头文件 "),t("code",[s._v("<string> <iostream> <sstream>")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用 istringstream 进行字符串输入")]),s._v("\nstring "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("input")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Input test 123 4.7 A"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nistringstream "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("inputString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("input"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 声明istringstream对象")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ninputString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" str1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" str2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用istringstream对象进行字符串输入")]),s._v("\ncout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" str1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" str2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ncout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("' '")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("' '")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用 ostringstream 进行字符串输出")]),s._v("\nostringstream outputString"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\noutputString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ok"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ncout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" outputString"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("str")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 取出ostringstream的字符串")]),s._v("\n")])])]),t("h2",{attrs:{id:"reference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[s._v("#")]),s._v(" Reference")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.cnblogs.com/X-Do-Better/p/8628492.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("C++string类总结"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);