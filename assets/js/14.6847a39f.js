(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{341:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"程序结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#程序结构"}},[t._v("#")]),t._v(" 程序结构")]),t._v(" "),s("h2",{attrs:{id:"_5-1全局变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1全局变量"}},[t._v("#")]),t._v(" 5.1全局变量")]),t._v(" "),s("ul",[s("li",[t._v("全局变量具有全局的作用域和生存周期\n"),s("ul",[s("li",[t._v("全局变量的使用与函数无关")]),t._v(" "),s("li",[t._v("局部变量的作用域和生存期是一致的")])])]),t._v(" "),s("li",[t._v("全局变量的初始化，未初始化的全局变量会被编译器自动初始化为0或者NULL")]),t._v(" "),s("li",[t._v("全局变量与局部变量同名时，全局变量会被隐藏")])]),t._v(" "),s("p",[s("strong",[t._v("静态本地变量")])]),t._v(" "),s("ul",[s("li",[t._v("当函数离开时，静态本地变量将继续存在并保持原值；对静态本地变量的初始化只会在第一次使用时被初始化")]),t._v(" "),s("li",[t._v("静态本地变量是一种特殊的全局变量，具有全局的生存周期但是只有本地的作用域")])]),t._v(" "),s("p",[s("strong",[t._v("函数的返回结果是指针")])]),t._v(" "),s("ul",[s("li",[t._v("本地变量的存储空间是共享的，不要返回本地变量的地址")]),t._v(" "),s("li",[t._v("不要使用全局变量传参和传结果")]),t._v(" "),s("li",[t._v("在并行程序中，尽量不使用全局变量")])]),t._v(" "),s("h2",{attrs:{id:"_5-2编译预处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2编译预处理"}},[t._v("#")]),t._v(" 5.2编译预处理")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("#")]),t._v(" 开头的编译预处理指令不是C语言语句")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("#define")]),t._v("定义宏："),s("code",[t._v("#define PI 3.1415926")]),t._v("在编译预处理的过程中，会对宏进行完全的文本替换")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("PI")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1415926")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("FORMAT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%f\\n"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("PI2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("PI"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")])])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FORMAT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("PI2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("带参数的宏定义："),s("code",[t._v("#define cube(x) ((x)*(x)*(x))")]),t._v(",带参数的宏定义整个的值和内部参数都要带括号才能够在文本替换的过程中不会出现语义上的改变")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name function"}},[t._v("cube")]),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cube")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"_5-3大程序结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3大程序结构"}},[t._v("#")]),t._v(" 5.3大程序结构")]),t._v(" "),s("ul",[s("li",[t._v("多个源代码文件的整合，通过建立项目来建立文件之间的链接")]),t._v(" "),s("li",[t._v("头文件：存放函数原型，调用函数的文件"),s("code",[t._v("#include")]),t._v("头文件，确定函数调用文件与函数实现文件间参数类型的一致")]),t._v(" "),s("li",[s("code",[t._v("#include")]),t._v("编译预处理指令：将"),s("code",[t._v("include")]),t._v("的文件内容直接插入到引用位置")]),t._v(" "),s("li",[t._v("加"),s("code",[t._v("static")]),t._v("的函数是不对外公开的，只能在文件内使用")])]),t._v(" "),s("p",[s("strong",[t._v("声明与定义")])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("extern int i;")]),t._v("是变量的声明，声明是不产生代码的东西")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("int i;")]),t._v("是变量的定义，是产生代码的东西")])]),t._v(" "),s("li",[s("p",[t._v("一般情况下只将声明放在头文件中，否则在不同的"),s("code",[t._v("#include")]),t._v("头文件的过程中，会导致重复定义错误，可以使用"),s("code",[t._v("#ifndef #define #endif")]),t._v("来避免头文件中重复引用情况")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//标准头文件结构")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifndef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("__LIST_HEAD__")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("__LIST_HEAD__")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);